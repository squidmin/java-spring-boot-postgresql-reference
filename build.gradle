plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
}

group = 'org.squidmin.springboot.postgresql'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jacoco {
    toolVersion = "0.8.9"
}

jacocoTestReport {
    dependsOn test  // Ensure tests are run before generating the report

    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('bootRun') {
    systemProperty 'spring.profiles.active', System.getProperty('APP_PROFILE')

    standardInput = System.in;
}

tasks.named('test') {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        events 'passed', 'skipped', 'failed'
    }

    finalizedBy jacocoTestReport  // Automatically generate code coverage report after running tests
}
